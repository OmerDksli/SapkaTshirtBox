@using System.Security.Claims
@model IEnumerable<OzSapkaTShirt.Models.OrderProduct>

@{
    ViewData["Title"] = "Index";
}
<script src="~/lib/jquery/dist/jquery.min.js"></script>

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Order)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Product)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Quantity)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Total)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        
@foreach (var item in Model) {
            <tr class="@item.ProductId.ToString()">
            <td>
                    @if (item.Product.DBImage != null)
                    {
                        <img src="data:image/png;base64,@Convert.ToBase64String(item.Product.DBImage)" style="width:100px" />
                    }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Product.Color)
            </td>
            <td>
                
                
                <a class="@item.ProductId.ToString()" style="margin:auto">
                        @Html.DisplayFor(modelItem => item.Quantity)      
                </a>
                        <input type="button" value="-" onclick="AddToBasket(@item.ProductId.ToString(),-1)" />
                        <input style="margin-block-start:auto" type="button" value="+" onclick="AddToBasket(@item.ProductId.ToString(),1 )" />
                        
                    
                    
            </td>
            <td class="@item.ProductId.ToString()">
                @Html.DisplayFor(modelItem => item.Price)
            </td>
                <td class="@item.ProductId.ToString()">
                @Html.DisplayFor(modelItem => item.Total)
            </td>
            <td>
                @*@Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ }) |*@
                @Html.ActionLink("Details", "Details", new {  id=item.Order.Id }) |
                @*@Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ })*@
                    <input  style="background-color:red;color:whitesmoke;font-weight:bold;border-radius:10px" type="button" value="X" onclick="AddToBasket(@item.ProductId.ToString(),-Number(document.getElementsByClassName(@item.ProductId.ToString())[1].innerHTML))" />
            </td>
        </tr>
            
}
        <tr style="background-color:black;color:aliceblue">
            <td>
                @Html.DisplayNameFor(model => model.Order.TotalPrice);
            </td>
            <td>
                
            </td>
            <td>
                
            </td>
            <td >
                
            </td>
            
            <td id="basketTotal">
                @if (Model.Any(o=>o.Order!=null))
                {@Model.Where(o=>o.Order.Status==0).FirstOrDefault().Order.TotalPrice;}
                
            </td>
            <td>
            </td>
        </tr>
    </tbody>
</table>
<div id="addOrder">
    @if (!(Model.Any(o => o.Order != null)))
    {
        <a id="homeLink"href="Home/Index">Sepet Boş Ürün ekleyiniz</a>
    }
    else
    {
        
    }
</div>

    <script>
    $("#basketCount").html(@Model.Sum(o=>o.Quantity))
        function UpDateBasket(data) {
            var basketCount = 0;
            var i;
            if(data==null)
                {
                basketCount = 0;
                }
            else
                {
                for (i = 0; i < data.orderProducts.length; i++) {
                basketCount = basketCount + data.orderProducts[i].quantity;
                console.log(data.orderProducts[i].quantity)
                }
            }
            if(basketCount==0)
            {
            //alert("çalıştı");
            var goHome=document.createElement("a");
            goHome.textContent="Sepet Boş Ürün Ekleyiniz";
            goHome.href="Home/Index";
            goHome.id = "homeLink"
            var container = document.getElementById("addOrder");
            container.innerHTML="";
            container.appendChild(goHome);//addOrder id li elementin içine oluşturulan goHome elementi eklenir
            }
            //else{
            //var goHome = document.createElement("a");
            //goHome.textContent = "Siparişleri Onayla";
            //goHome.href = "Home/Index";
            //var container = document.getElementById("addOrder");
            //container.innerHTML = "";
            //container.appendChild(goHome);//addOrder id li elementin içine oluşturulan goHome elementi eklenir
            //}
            $("#basketCount").html(basketCount)
            
        }
    function AddToBasket(productId,  quantites) {

        $.post("@Url.Action("UpDateBasket","OrderProducts")/" + productId + "?quantity=" + quantites, UpDateBasket, "json");
            
        //elementQuantity nin 0. indisinde tablo satırı, 1. quantity, 2.indiste ürün fiyatı 3. indiste toplam fiyat bulunmaktadır
        var elementQuantity = document.getElementsByClassName(productId.toString());
        var basketTotal = document.getElementById("basketTotal");
        elementQuantity[1].innerHTML = Number(elementQuantity[1].innerHTML) + quantites;
        basketTotal.innerHTML = Number(basketTotal.innerHTML) +
            quantites * Number(elementQuantity[2].innerHTML);


       if (Number(elementQuantity[1].innerHTML) <= 0) {
                elementQuantity[0].innerHTML="";
            
            }  
            else{
            elementQuantity[3].innerHTML = Number(elementQuantity[3].innerHTML) + quantites * Number(elementQuantity[2].innerHTML);
            }
                    
        }
        
    </script>



